image: kaiwinter/docker-java8-maven
stages:
  - Build
  - Tests
  - Deploy
cache:
  paths:
    - repo/
before_script:
  - export VERSION=$(mvn -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec -q)
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Alternatively, assuming you created the SSH_SERVER_HOSTKEYS variable
  ## previously, uncomment the following two lines instead.
  ##
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts


  ##
  ## Optionally, if you will be using any Git commands, set the user name and
  ## and email.
  ##
  - git config --global user.email "patmagauran.j@gmail.com"
  - git config --global user.name "Patrick Magauran"

build:
  stage: Build
  script:
    - eval mvn clean compile package
    - mkdir output
    - cp LICENSE output/LICENSE
    - cp README.md output/README.md

    - cp target/ABOS-$VERSION-jar-with-dependencies.jar output/$VERSION.jar
  artifacts:
    paths:
      - output
  tags:
    - linux

Site:
  stage: Tests
  script:
    - eval mvn site
  artifacts:
    paths:
      - target/site
  tags:
    - linux
  only:
    - master
    - tags
pages:
  stage: Tests
  script:
    - eval mvn site
    - mv target/site/* public/
  artifacts:
    paths:
      - public
  tags:
    - linux
  only:
    - Develop
Deploy:
  stage: Deploy
  script:
    - eval mvn clean compile package
  artifacts:
    paths:
      - target/*-with-dependencies.jar
  tags:
    - linux
  only:
    - tags
Deploy:
  stage: Deploy
  script:
    - eval mvn clean compile package
  artifacts:
    paths:
      - target/*-with-dependencies.jar
  tags:
    - linux
  only:
    - Develop


