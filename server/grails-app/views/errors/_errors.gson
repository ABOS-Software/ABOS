/*******************************************************************************
 * ABOS
 * Copyright (C) 2018 Patrick Magauran
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/

import org.springframework.validation.Errors
import org.springframework.validation.ObjectError

/**
 * Renders validation errors according to vnd.error: https://github.com/blongden/vnd.error
 */
model {
    Errors errors
}

response.status UNPROCESSABLE_ENTITY

json {
    Errors errorsObject = (Errors) this.errors
    def allErrors = errorsObject.allErrors
    int errorCount = allErrors.size()
    def resourcePath = g.link(resource: request.uri, absolute: false)
    def resourceLink = g.link(resource: request.uri, absolute: true)
    if (errorCount == 1) {
        def error = allErrors.iterator().next()
        message messageSource.getMessage(error, locale)
        path resourcePath
        _links {
            self {
                href resourceLink
            }
        }
    } else {
        total errorCount
        _embedded {
            errors(allErrors) { ObjectError error ->
                message messageSource.getMessage(error, locale)
                path resourcePath
                _links {
                    self {
                        href resourceLink
                    }
                }
            }
        }
    }
}
